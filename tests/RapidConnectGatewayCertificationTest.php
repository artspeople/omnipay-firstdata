<?php

namespace Omnipay\FirstData;

use Omnipay\Tests\TestCase;

class RapidConnectGatewayCertificationTest extends TestCase
{
    public $responses;


    public function setUp()
    {
        parent::setUp();

        if (!getenv('RAPIDCONNECT_APP') ||
            !getenv('RAPIDCONNECT_DID') ||
            !getenv('RAPIDCONNECT_GROUPID') ||
            !getenv('RAPIDCONNECT_MERCHANTID_ECOMM') ||
            !getenv('RAPIDCONNECT_MERCHANTID_MOTO') ||
            !getenv('RAPIDCONNECT_MERCHANTID_RETAIL') ||
            !getenv('RAPIDCONNECT_MERCHANT_EMAIL') ||
            !getenv('RAPIDCONNECT_SERVICEID') ||
            !getenv('RAPIDCONNECT_TERMINALID') ||
            !getenv('RAPIDCONNECT_TPPID')
        ) {
            $this->markTestSkipped('Missing credentials');
        }
    }


    public function testCaseNumber000000840010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '840010',
                'ReferenceNumber' => '000000840010',
                'OrderNumber' => '000000840010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAwMDA4NDAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '62107',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000001000010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '000010',
                'ReferenceNumber' => '000001000010',
                'OrderNumber' => '000001000010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAwMDEwMDAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '59017',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000001010010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '010010',
                'ReferenceNumber' => '000001010010',
                'OrderNumber' => '000001010010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAwMDEwMTAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '58314',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000001280010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '280010',
                'ReferenceNumber' => '000001280010',
                'OrderNumber' => '000001280010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAwMDEyODAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '59018',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000001290010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '290010',
                'ReferenceNumber' => '000001290010',
                'OrderNumber' => '000001290010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAwMDEyOTAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '58315',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000001340010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '340010',
                'ReferenceNumber' => '000001340010',
                'OrderNumber' => '000001340010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '30006',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000001360010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '360010',
                'ReferenceNumber' => '000001360010',
                'OrderNumber' => '000001360010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '30132',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000001360011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '360011',
                'ReferenceNumber' => '000001360011',
                'OrderNumber' => '000001360011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '30132',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '30132',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ac6fc1de',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '360011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '30132',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000001700010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '700010',
                'ReferenceNumber' => '000001700010',
                'OrderNumber' => '000001700010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '59019',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000001710010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '710010',
                'ReferenceNumber' => '000001710010',
                'OrderNumber' => '000001710010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '58316',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000001880010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180001234506',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '880010',
                'ReferenceNumber' => '000001880010',
                'OrderNumber' => '000001880010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '14052',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000001900010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180001234506',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '900010',
                'ReferenceNumber' => '000001900010',
                'OrderNumber' => '000001900010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '14042',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000001900011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180001234506',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '900011',
                'ReferenceNumber' => '000001900011',
                'OrderNumber' => '000001900011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7018',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7018',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '437528c5',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '900011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7018',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000002620010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '620010',
                'ReferenceNumber' => '000002620010',
                'OrderNumber' => '000002620010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '14126',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000002640010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '640010',
                'ReferenceNumber' => '000002640010',
                'OrderNumber' => '000002640010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '14128',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000002660010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '660010',
                'ReferenceNumber' => '000002660010',
                'OrderNumber' => '000002660010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '14118',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000002680010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680010',
                'ReferenceNumber' => '000002680010',
                'OrderNumber' => '000002680010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '14120',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000002700010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '700010',
                'ReferenceNumber' => '000002700010',
                'OrderNumber' => '000002700010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '76025',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000002720010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '720010',
                'ReferenceNumber' => '000002720010',
                'OrderNumber' => '000002720010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '76021',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000003250010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654000004',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250010',
                'ReferenceNumber' => '000003250010',
                'OrderNumber' => '000003250010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '13550',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000003270010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654000004',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '270010',
                'ReferenceNumber' => '000003270010',
                'OrderNumber' => '000003270010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '13552',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000003290010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654000004',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '290010',
                'ReferenceNumber' => '000003290010',
                'OrderNumber' => '000003290010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '13542',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000003310010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654000004',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '310010',
                'ReferenceNumber' => '000003310010',
                'OrderNumber' => '000003310010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '13544',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000003330010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654000004',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '330010',
                'ReferenceNumber' => '000003330010',
                'OrderNumber' => '000003330010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '34011',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000003350010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654000004',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '350010',
                'ReferenceNumber' => '000003350010',
                'OrderNumber' => '000003350010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '34015',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000003950010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '950010',
                'ReferenceNumber' => '000003950010',
                'OrderNumber' => '000003950010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '64522',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000003980010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264280001234559',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '980010',
                'ReferenceNumber' => '000003980010',
                'OrderNumber' => '000003980010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '30144',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000005700010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '700010',
                'ReferenceNumber' => '000005700010',
                'OrderNumber' => '000005700010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '111968',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000005700011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '700011',
                'ReferenceNumber' => '000005700011',
                'OrderNumber' => '000005700011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'aebb9985',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '700011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '111868',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022420010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '420010',
                'ReferenceNumber' => '000022420010',
                'OrderNumber' => '000022420010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '10000',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022420011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '420011',
                'ReferenceNumber' => '000022420011',
                'OrderNumber' => '000022420011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f2dd022e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '420011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '10000',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022440010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '440010',
                'ReferenceNumber' => '000022440010',
                'OrderNumber' => '000022440010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '62008',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000022440011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '440011',
                'ReferenceNumber' => '000022440011',
                'OrderNumber' => '000022440011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '27717f73',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '440011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '32004',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022460010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '460010',
                'ReferenceNumber' => '000022460010',
                'OrderNumber' => '000022460010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '10500',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022460011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '460011',
                'ReferenceNumber' => '000022460011',
                'OrderNumber' => '000022460011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f8607de8',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '460011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '10500',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022480010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '480010',
                'ReferenceNumber' => '000022480010',
                'OrderNumber' => '000022480010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '10700',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022480011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '480011',
                'ReferenceNumber' => '000022480011',
                'OrderNumber' => '000022480011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '10700',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '10700',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '3cf7a631',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '480011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '10700',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022490010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '490010',
                'ReferenceNumber' => '000022490010',
                'OrderNumber' => '000022490010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '10800',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022490011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '490011',
                'ReferenceNumber' => '000022490011',
                'OrderNumber' => '000022490011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '10800',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '10800',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '482a16b3',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '490011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '10800',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022580010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4001360000000090',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '580010',
                'ReferenceNumber' => '000022580010',
                'OrderNumber' => '000022580010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '000',
            'currency' => '840',
        );

        // Act
        $request = $gateway->verification($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022600010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '600010',
                'ReferenceNumber' => '000022600010',
                'OrderNumber' => '000022600010',
            ),
            'amount' => '9435',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022600011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '600011',
                'ReferenceNumber' => '000022600011',
                'OrderNumber' => '000022600011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ffb0e767',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '600011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9335',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022640010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '640010',
                'ReferenceNumber' => '000022640010',
                'OrderNumber' => '000022640010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '63139',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '63139',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '63139',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000022770010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '770010',
                'ReferenceNumber' => '000022770010',
                'OrderNumber' => '000022770010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '55002',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000022790010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '790010',
                'ReferenceNumber' => '000022790010',
                'OrderNumber' => '000022790010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '55004',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000022810010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '810010',
                'ReferenceNumber' => '000022810010',
                'OrderNumber' => '000022810010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '55006',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000022820010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '820010',
                'ReferenceNumber' => '000022820010',
                'OrderNumber' => '000022820010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '55007',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000022830010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '830010',
                'ReferenceNumber' => '000022830010',
                'OrderNumber' => '000022830010',
            ),
            'amount' => '55008',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000023170010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011361001684877',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '170010',
                'ReferenceNumber' => '000023170010',
                'OrderNumber' => '000023170010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '000',
            'currency' => '840',
        );

        // Act
        $request = $gateway->verification($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000023230010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '230010',
                'ReferenceNumber' => '000023230010',
                'OrderNumber' => '000023230010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '46957',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000023270010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '270010',
                'ReferenceNumber' => '000023270010',
                'OrderNumber' => '000023270010',
            ),
            'amount' => '49439',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000023270011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '270011',
                'ReferenceNumber' => '000023270011',
                'OrderNumber' => '000023270011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '0f75266e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '270011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '49339',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000023670010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '670010',
                'ReferenceNumber' => '000023670010',
                'OrderNumber' => '000023670010',
            ),
            'amount' => '21400',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000023670011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '670011',
                'ReferenceNumber' => '000023670011',
                'OrderNumber' => '000023670011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '12cac8ab',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '670011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '21400',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000023780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '780010',
                'ReferenceNumber' => '000023780010',
                'OrderNumber' => '000023780010',
            ),
            'amount' => '000',
            'currency' => '840',
        );

        // Act
        $request = $gateway->balanceInquiry($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000023840010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '840010',
                'ReferenceNumber' => '000023840010',
                'OrderNumber' => '000023840010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '22400',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000023860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860010',
                'ReferenceNumber' => '000023860010',
                'OrderNumber' => '000023860010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '22600',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('500', $response->getResponseCode());
    }


    public function testCaseNumber000024040010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '040010',
                'ReferenceNumber' => '000024040010',
                'OrderNumber' => '000024040010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '63139',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '63139',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '63139',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024110010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '110010',
                'ReferenceNumber' => '000024110010',
                'OrderNumber' => '000024110010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '30000',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024110011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '110011',
                'ReferenceNumber' => '000024110011',
                'OrderNumber' => '000024110011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '356359ec',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '110011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '30000',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024130010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '130010',
                'ReferenceNumber' => '000024130010',
                'OrderNumber' => '000024130010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '54436',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000024130011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '130011',
                'ReferenceNumber' => '000024130011',
                'OrderNumber' => '000024130011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '3b648acb',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '130011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '27218',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024150010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '150010',
                'ReferenceNumber' => '000024150010',
                'OrderNumber' => '000024150010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '30500',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024150011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '150011',
                'ReferenceNumber' => '000024150011',
                'OrderNumber' => '000024150011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '2bfc39dc',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '150011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '30500',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024170010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '170010',
                'ReferenceNumber' => '000024170010',
                'OrderNumber' => '000024170010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '30700',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024170011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '170011',
                'ReferenceNumber' => '000024170011',
                'OrderNumber' => '000024170011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '30700',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '30700',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '733f5386',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '170011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '30700',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024180010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '180010',
                'ReferenceNumber' => '000024180010',
                'OrderNumber' => '000024180010',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '30800',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024180011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '180011',
                'ReferenceNumber' => '000024180011',
                'OrderNumber' => '000024180011',
            ),
            'AlternameMerchantNameandAddressGroup' => array(
                'MerchantName' => 'SMITH HARDWARE',
                'MerchantAddress' => '1307 Walt Whitman Road',
                'MerchantCity' => 'Melville',
                'MerchantState' => 'NY',
                'MerchantPostalCode' => '11747',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '30800',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '30800',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '806c30a6',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '180011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '30800',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000024230010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '371030089333338',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '230010',
                'ReferenceNumber' => '000024230010',
                'OrderNumber' => '000024230010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '000',
            'currency' => '840',
        );

        // Act
        $request = $gateway->verification($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000026940010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '940010',
                'ReferenceNumber' => '000026940010',
                'OrderNumber' => '000026940010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '8280',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000026940011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212149',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '940011',
                'ReferenceNumber' => '000026940011',
                'OrderNumber' => '000026940011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '8280',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '8280',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f9755125',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '940011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '8280',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000027000010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5405001111111165',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '000010',
                'ReferenceNumber' => '000027000010',
                'OrderNumber' => '000027000010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '8282',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000027000011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5405001111111165',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '000011',
                'ReferenceNumber' => '000027000011',
                'OrderNumber' => '000027000011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '8282',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '8282',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c5973cfe',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '000011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '8282',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000133760010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424181111112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '760010',
                'ReferenceNumber' => '000133760010',
                'OrderNumber' => '000133760010',
            ),
            'amount' => '000',
            'currency' => '840',
        );

        // Act
        $request = $gateway->balanceInquiry($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000136760010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '760010',
                'ReferenceNumber' => '000136760010',
                'OrderNumber' => '000136760010',
            ),
            'amount' => '62110',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000136870010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '870010',
                'ReferenceNumber' => '000136870010',
                'OrderNumber' => '000136870010',
            ),
            'amount' => '54202',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000136970010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '970010',
                'ReferenceNumber' => '000136970010',
                'OrderNumber' => '000136970010',
            ),
            'amount' => '62144',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137020010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '020010',
                'ReferenceNumber' => '000137020010',
                'OrderNumber' => '000137020010',
            ),
            'amount' => '83136',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137050010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '050010',
                'ReferenceNumber' => '000137050010',
                'OrderNumber' => '000137050010',
            ),
            'amount' => '34146',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137070010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '070010',
                'ReferenceNumber' => '000137070010',
                'OrderNumber' => '000137070010',
            ),
            'amount' => '34139',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137120010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '120010',
                'ReferenceNumber' => '000137120010',
                'OrderNumber' => '000137120010',
            ),
            'amount' => '101135',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137140010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '140010',
                'ReferenceNumber' => '000137140010',
                'OrderNumber' => '000137140010',
            ),
            'amount' => '57210',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137140011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '140011',
                'ReferenceNumber' => '000137140011',
                'OrderNumber' => '000137140011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '3d6f24c7',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '140011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '57210',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137170010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '170010',
                'ReferenceNumber' => '000137170010',
                'OrderNumber' => '000137170010',
            ),
            'amount' => '57311',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137170011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '170011',
                'ReferenceNumber' => '000137170011',
                'OrderNumber' => '000137170011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'cf7685f3',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '170011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '57311',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137200010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '200010',
                'ReferenceNumber' => '000137200010',
                'OrderNumber' => '000137200010',
            ),
            'amount' => '76056',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000137200011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '200011',
                'ReferenceNumber' => '000137200011',
                'OrderNumber' => '000137200011',
            ),
            'amount' => '38028',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137230010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '230010',
                'ReferenceNumber' => '000137230010',
                'OrderNumber' => '000137230010',
            ),
            'amount' => '76052',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000137230011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '230011',
                'ReferenceNumber' => '000137230011',
                'OrderNumber' => '000137230011',
            ),
            'amount' => '38026',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137260010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '260010',
                'ReferenceNumber' => '000137260010',
                'OrderNumber' => '000137260010',
            ),
            'amount' => '34104',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137260011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '260011',
                'ReferenceNumber' => '000137260011',
                'OrderNumber' => '000137260011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '220975b8',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '260011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34104',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137290010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '290010',
                'ReferenceNumber' => '000137290010',
                'OrderNumber' => '000137290010',
            ),
            'amount' => '34451',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137290011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '290011',
                'ReferenceNumber' => '000137290011',
                'OrderNumber' => '000137290011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd25de735',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '290011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34451',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137320010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '320010',
                'ReferenceNumber' => '000137320010',
                'OrderNumber' => '000137320010',
            ),
            'amount' => '101299',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000137320011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '320011',
                'ReferenceNumber' => '000137320011',
                'OrderNumber' => '000137320011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '5410989e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '320011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '101299',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138120010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '120010',
                'ReferenceNumber' => '000138120010',
                'OrderNumber' => '000138120010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '83256',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('N', $response->getAVSResultCode());
        $this->assertEquals('NoMtch', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138130010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '130010',
                'ReferenceNumber' => '000138130010',
                'OrderNumber' => '000138130010',
            ),
            'amount' => '83297',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138150010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '150010',
                'ReferenceNumber' => '000138150010',
                'OrderNumber' => '000138150010',
            ),
            'amount' => '34281',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138170010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '170010',
                'ReferenceNumber' => '000138170010',
                'OrderNumber' => '000138170010',
            ),
            'amount' => '101283',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138210010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '210010',
                'ReferenceNumber' => '000138210010',
                'OrderNumber' => '000138210010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '62266',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138230010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '230010',
                'ReferenceNumber' => '000138230010',
                'OrderNumber' => '000138230010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '57211',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138230011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '230011',
                'ReferenceNumber' => '000138230011',
                'OrderNumber' => '000138230011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd3bec163',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '230011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '57211',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138250010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250010',
                'ReferenceNumber' => '000138250010',
                'OrderNumber' => '000138250010',
            ),
            'amount' => '84794',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138250011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250011',
                'ReferenceNumber' => '000138250011',
                'OrderNumber' => '000138250011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'dfba774f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '250011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '84794',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138270010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '270010',
                'ReferenceNumber' => '000138270010',
                'OrderNumber' => '000138270010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '34251',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138270011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '270011',
                'ReferenceNumber' => '000138270011',
                'OrderNumber' => '000138270011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f31db986',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '270011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34251',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138300010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '300010',
                'ReferenceNumber' => '000138300010',
                'OrderNumber' => '000138300010',
            ),
            'amount' => '82952',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138300011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '300011',
                'ReferenceNumber' => '000138300011',
                'OrderNumber' => '000138300011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '41473',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '41473',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'deae7cc8',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '300011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41473',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138310010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '310010',
                'ReferenceNumber' => '000138310010',
                'OrderNumber' => '000138310010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '101294',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138310011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '310011',
                'ReferenceNumber' => '000138310011',
                'OrderNumber' => '000138310011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '072f5559',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '310011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '101294',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138430010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '430010',
                'ReferenceNumber' => '000138430010',
                'OrderNumber' => '000138430010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '34206',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138440010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '440010',
                'ReferenceNumber' => '000138440010',
                'OrderNumber' => '000138440010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '113610',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138460010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '460010',
                'ReferenceNumber' => '000138460010',
                'OrderNumber' => '000138460010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '62207',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138510010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '510010',
                'ReferenceNumber' => '000138510010',
                'OrderNumber' => '000138510010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '83211',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138540010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '540010',
                'ReferenceNumber' => '000138540010',
                'OrderNumber' => '000138540010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '117022',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138550010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '550010',
                'ReferenceNumber' => '000138550010',
                'OrderNumber' => '000138550010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '101209',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138670010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '670010',
                'ReferenceNumber' => '000138670010',
                'OrderNumber' => '000138670010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '55444',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138670011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '670011',
                'ReferenceNumber' => '000138670011',
                'OrderNumber' => '000138670011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '27722',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '27722',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'fed45381',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '670011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '27722',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138680010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680010',
                'ReferenceNumber' => '000138680010',
                'OrderNumber' => '000138680010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '34195',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138680011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680011',
                'ReferenceNumber' => '000138680011',
                'OrderNumber' => '000138680011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c8203895',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '680011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34195',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138690010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '690010',
                'ReferenceNumber' => '000138690010',
                'OrderNumber' => '000138690010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '14304',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138690011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '690011',
                'ReferenceNumber' => '000138690011',
                'OrderNumber' => '000138690011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '84cd1022',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '690011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '14304',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138700010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '700010',
                'ReferenceNumber' => '000138700010',
                'OrderNumber' => '000138700010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '13562',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138700011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '700011',
                'ReferenceNumber' => '000138700011',
                'OrderNumber' => '000138700011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '6778',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '6778',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '7b8e7a64',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '700011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '6778',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138710010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '710010',
                'ReferenceNumber' => '000138710010',
                'OrderNumber' => '000138710010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '13682',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138750010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '750010',
                'ReferenceNumber' => '000138750010',
                'OrderNumber' => '000138750010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '62195',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138750011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '750011',
                'ReferenceNumber' => '000138750011',
                'OrderNumber' => '000138750011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '62099',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '62099',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'cf54a1fd',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '750011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '62099',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138760010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '760010',
                'ReferenceNumber' => '000138760010',
                'OrderNumber' => '000138760010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3NjAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '14642',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138760011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '760011',
                'ReferenceNumber' => '000138760011',
                'OrderNumber' => '000138760011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '14642',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '14642',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3NjAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a199f23b',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '760011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '14642',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138770010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '770010',
                'ReferenceNumber' => '000138770010',
                'OrderNumber' => '000138770010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3NzAwMTA=',
            ),
            'amount' => '13804',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138770011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '770011',
                'ReferenceNumber' => '000138770011',
                'OrderNumber' => '000138770011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3NzAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f7b2ccfd',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '770011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '13804',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780010',
                'ReferenceNumber' => '000138780010',
                'OrderNumber' => '000138780010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3ODAwMTA=',
            ),
            'amount' => '15040',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138780011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780011',
                'ReferenceNumber' => '000138780011',
                'OrderNumber' => '000138780011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3ODAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c064592f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '780011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '15040',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138790010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '790010',
                'ReferenceNumber' => '000138790010',
                'OrderNumber' => '000138790010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3OTAwMTA=',
            ),
            'amount' => '13848',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138790011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '790011',
                'ReferenceNumber' => '000138790011',
                'OrderNumber' => '000138790011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '13845',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '13845',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg3OTAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '7248fc78',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '790011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '13845',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138800010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '800010',
                'ReferenceNumber' => '000138800010',
                'OrderNumber' => '000138800010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxMzg4MDAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '13718',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138850010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '850010',
                'ReferenceNumber' => '000138850010',
                'OrderNumber' => '000138850010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '77190',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138850011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '850011',
                'ReferenceNumber' => '000138850011',
                'OrderNumber' => '000138850011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '38595',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '860010',
                'ReferenceNumber' => '000138860010',
                'OrderNumber' => '000138860010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '14678',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138860011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '860011',
                'ReferenceNumber' => '000138860011',
                'OrderNumber' => '000138860011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7339',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7339',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '46e9718d',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '860011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7339',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138870010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '870010',
                'ReferenceNumber' => '000138870010',
                'OrderNumber' => '000138870010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '14194',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138870011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '870011',
                'ReferenceNumber' => '000138870011',
                'OrderNumber' => '000138870011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '0b1c350a',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '870011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '14194',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138880010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '880010',
                'ReferenceNumber' => '000138880010',
                'OrderNumber' => '000138880010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '15272',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138880011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '880011',
                'ReferenceNumber' => '000138880011',
                'OrderNumber' => '000138880011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7636',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7636',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9bf0f134',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '880011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7636',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000138900010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '900010',
                'ReferenceNumber' => '000138900010',
                'OrderNumber' => '000138900010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '82952',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000138900011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '900011',
                'ReferenceNumber' => '000138900011',
                'OrderNumber' => '000138900011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '41476',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '41476',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '039f0770',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '900011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41476',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000139140010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '140010',
                'ReferenceNumber' => '000139140010',
                'OrderNumber' => '000139140010',
            ),
            'amount' => '16300',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000139160010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '160010',
                'ReferenceNumber' => '000139160010',
                'OrderNumber' => '000139160010',
            ),
            'amount' => '16298',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000139180010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '180010',
                'ReferenceNumber' => '000139180010',
                'OrderNumber' => '000139180010',
            ),
            'amount' => '16242',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000139220010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '220010',
                'ReferenceNumber' => '000139220010',
                'OrderNumber' => '000139220010',
            ),
            'amount' => '16296',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000139630010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '630010',
                'ReferenceNumber' => '000139630010',
                'OrderNumber' => '000139630010',
            ),
            'amount' => '41334',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000139630011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '630011',
                'ReferenceNumber' => '000139630011',
                'OrderNumber' => '000139630011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '3ab0cd29',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '630011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41334',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000139750010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '750010',
                'ReferenceNumber' => '000139750010',
                'OrderNumber' => '000139750010',
            ),
            'amount' => '241330',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000139750011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '750011',
                'ReferenceNumber' => '000139750011',
                'OrderNumber' => '000139750011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '36734370',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '750011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '241330',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000139860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860010',
                'ReferenceNumber' => '000139860010',
                'OrderNumber' => '000139860010',
            ),
            'amount' => '241362',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000139860011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860011',
                'ReferenceNumber' => '000139860011',
                'OrderNumber' => '000139860011',
            ),
            'amount' => '120681',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000139950010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702221113',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '950010',
                'ReferenceNumber' => '000139950010',
                'OrderNumber' => '000139950010',
            ),
            'amount' => '41294',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000139950011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702221113',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '950011',
                'ReferenceNumber' => '000139950011',
                'OrderNumber' => '000139950011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '20647',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '20647',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '78befc60',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '950011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '20647',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140000010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '000010',
                'ReferenceNumber' => '000140000010',
                'OrderNumber' => '000140000010',
            ),
            'amount' => '241332',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140000011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '000011',
                'ReferenceNumber' => '000140000011',
                'OrderNumber' => '000140000011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '10617e56',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '000011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '241332',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140010010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '010010',
                'ReferenceNumber' => '000140010010',
                'OrderNumber' => '000140010010',
            ),
            'amount' => '241104',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140010011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '010011',
                'ReferenceNumber' => '000140010011',
                'OrderNumber' => '000140010011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '241104',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '241104',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9aba830c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '010011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '241104',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140170010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '170010',
                'ReferenceNumber' => '000140170010',
                'OrderNumber' => '000140170010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11314',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140170011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '170011',
                'ReferenceNumber' => '000140170011',
                'OrderNumber' => '000140170011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '103d596e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '170011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '11314',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140190010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '190010',
                'ReferenceNumber' => '000140190010',
                'OrderNumber' => '000140190010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '12308',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140190011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '190011',
                'ReferenceNumber' => '000140190011',
                'OrderNumber' => '000140190011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd0ed39a7',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '190011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12308',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140240010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '240010',
                'ReferenceNumber' => '000140240010',
                'OrderNumber' => '000140240010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '111956',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000140240011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '240011',
                'ReferenceNumber' => '000140240011',
                'OrderNumber' => '000140240011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'fde86d31',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '240011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '111956',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000141460010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '460010',
                'ReferenceNumber' => '000141460010',
                'OrderNumber' => '000141460010',
            ),
            'amount' => '11946',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000141460011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '460011',
                'ReferenceNumber' => '000141460011',
                'OrderNumber' => '000141460011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '38883229',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '460011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '11946',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000141470010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '470010',
                'ReferenceNumber' => '000141470010',
                'OrderNumber' => '000141470010',
            ),
            'amount' => '11352',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000141470011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '470011',
                'ReferenceNumber' => '000141470011',
                'OrderNumber' => '000141470011',
            ),
            'amount' => '5676',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000141830010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '830010',
                'ReferenceNumber' => '000141830010',
                'OrderNumber' => '000141830010',
            ),
            'amount' => '12722',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000141830011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '830011',
                'ReferenceNumber' => '000141830011',
                'OrderNumber' => '000141830011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a464ecc5',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '830011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12722',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000141840010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '840010',
                'ReferenceNumber' => '000141840010',
                'OrderNumber' => '000141840010',
            ),
            'amount' => '12192',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000141840011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '840011',
                'ReferenceNumber' => '000141840011',
                'OrderNumber' => '000141840011',
            ),
            'amount' => '6096',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142070010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '4761530001115556',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '070010',
                'ReferenceNumber' => '000142070010',
                'OrderNumber' => '000142070010',
            ),
            'amount' => '12810',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142070011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4761530001115556',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '070011',
                'ReferenceNumber' => '000142070011',
                'OrderNumber' => '000142070011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '12810',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '12810',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'b1342370',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '070011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12810',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142080010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '080010',
                'ReferenceNumber' => '000142080010',
                'OrderNumber' => '000142080010',
            ),
            'amount' => '12298',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142080011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '080011',
                'ReferenceNumber' => '000142080011',
                'OrderNumber' => '000142080011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ad5e8e6e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '080011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12298',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142240010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '240010',
                'ReferenceNumber' => '000142240010',
                'OrderNumber' => '000142240010',
            ),
            'amount' => '13570',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142240011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '240011',
                'ReferenceNumber' => '000142240011',
                'OrderNumber' => '000142240011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '422080be',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '240011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '13570',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142450010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '450010',
                'ReferenceNumber' => '000142450010',
                'OrderNumber' => '000142450010',
            ),
            'amount' => '13680',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142450011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '450011',
                'ReferenceNumber' => '000142450011',
                'OrderNumber' => '000142450011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '13680',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '13680',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '790fa355',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '450011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '13680',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142610010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '610010',
                'ReferenceNumber' => '000142610010',
                'OrderNumber' => '000142610010',
            ),
            'amount' => '14540',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142610011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '610011',
                'ReferenceNumber' => '000142610011',
                'OrderNumber' => '000142610011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '27e53649',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '610011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '14540',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000142620010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '620010',
                'ReferenceNumber' => '000142620010',
                'OrderNumber' => '000142620010',
            ),
            'amount' => '10912',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000180000010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '000010',
                'ReferenceNumber' => '000180000010',
                'OrderNumber' => '000180000010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '84002',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180000011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '000011',
                'ReferenceNumber' => '000180000011',
                'OrderNumber' => '000180000011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'b8eb498a',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '000011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '84002',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180020010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '020010',
                'ReferenceNumber' => '000180020010',
                'OrderNumber' => '000180020010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '84202',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180020011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '020011',
                'ReferenceNumber' => '000180020011',
                'OrderNumber' => '000180020011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '460e8f3c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '020011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '84202',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180040010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000007770',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '040010',
                'ReferenceNumber' => '000180040010',
                'OrderNumber' => '000180040010',
            ),
            'amount' => '7678',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180040011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000007770',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '040011',
                'ReferenceNumber' => '000180040011',
                'OrderNumber' => '000180040011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '5f0b1759',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '040011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7678',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180070010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4000020000000018',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '070010',
                'ReferenceNumber' => '000180070010',
                'OrderNumber' => '000180070010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '19602',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180070011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4000020000000018',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '070011',
                'ReferenceNumber' => '000180070011',
                'OrderNumber' => '000180070011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '311e39d8',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '070011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '19602',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180090010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4000020000000018',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '090010',
                'ReferenceNumber' => '000180090010',
                'OrderNumber' => '000180090010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxODAwOTAwMTA=',
            ),
            'amount' => '19606',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180090011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4000020000000018',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '090011',
                'ReferenceNumber' => '000180090011',
                'OrderNumber' => '000180090011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxODAwOTAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd2811327',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '090011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '19606',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180140010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '140010',
                'ReferenceNumber' => '000180140010',
                'OrderNumber' => '000180140010',
            ),
            'amount' => '34150',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180140011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '140011',
                'ReferenceNumber' => '000180140011',
                'OrderNumber' => '000180140011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd331a1d6',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '140011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34150',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180160010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '160010',
                'ReferenceNumber' => '000180160010',
                'OrderNumber' => '000180160010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '34350',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180160011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '160011',
                'ReferenceNumber' => '000180160011',
                'OrderNumber' => '000180160011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '98a12ca3',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '160011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34350',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180180010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '180010',
                'ReferenceNumber' => '000180180010',
                'OrderNumber' => '000180180010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '34550',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180180011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '180011',
                'ReferenceNumber' => '000180180011',
                'OrderNumber' => '000180180011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '546ed876',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '180011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34550',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180200010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '200010',
                'ReferenceNumber' => '000180200010',
                'OrderNumber' => '000180200010',
            ),
            'amount' => '34750',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180200011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '200011',
                'ReferenceNumber' => '000180200011',
                'OrderNumber' => '000180200011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'eacc4058',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '200011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34750',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180250010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250010',
                'ReferenceNumber' => '000180250010',
                'OrderNumber' => '000180250010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '1602',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180250011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250011',
                'ReferenceNumber' => '000180250011',
                'OrderNumber' => '000180250011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a6ea5f0c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '250011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '1602',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180270010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '270010',
                'ReferenceNumber' => '000180270010',
                'OrderNumber' => '000180270010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '2606',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180270011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '270011',
                'ReferenceNumber' => '000180270011',
                'OrderNumber' => '000180270011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '26de82b5',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '270011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '2606',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180290010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '290010',
                'ReferenceNumber' => '000180290010',
                'OrderNumber' => '000180290010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '2610',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180290011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '290011',
                'ReferenceNumber' => '000180290011',
                'OrderNumber' => '000180290011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '0b9a9612',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '290011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '2610',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180300010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '300010',
                'ReferenceNumber' => '000180300010',
                'OrderNumber' => '000180300010',
            ),
            'amount' => '2612',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180300011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6221280005638208',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '300011',
                'ReferenceNumber' => '000180300011',
                'OrderNumber' => '000180300011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ba2ae740',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '300011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '2612',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180930010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '930010',
                'ReferenceNumber' => '000180930010',
                'OrderNumber' => '000180930010',
            ),
            'amount' => '62282',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000180930011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '930011',
                'ReferenceNumber' => '000180930011',
                'OrderNumber' => '000180930011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'eea9d864',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '930011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '62282',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000181150010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '150010',
                'ReferenceNumber' => '000181150010',
                'OrderNumber' => '000181150010',
            ),
            'amount' => '62151',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000181150011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '150011',
                'ReferenceNumber' => '000181150011',
                'OrderNumber' => '000181150011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd3071904',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '150011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '62151',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000181190010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '190010',
                'ReferenceNumber' => '000181190010',
                'OrderNumber' => '000181190010',
            ),
            'amount' => '101142',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000181190011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '190011',
                'ReferenceNumber' => '000181190011',
                'OrderNumber' => '000181190011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '5723baec',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '190011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '101142',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000181230010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '230010',
                'ReferenceNumber' => '000181230010',
                'OrderNumber' => '000181230010',
            ),
            'amount' => '83143',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000181230011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '230011',
                'ReferenceNumber' => '000181230011',
                'OrderNumber' => '000181230011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'dd5cb30f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '230011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '83143',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Refund';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182000010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '000010',
                'ReferenceNumber' => '000182000010',
                'OrderNumber' => '000182000010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '18615',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182000011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '000011',
                'ReferenceNumber' => '000182000011',
                'OrderNumber' => '000182000011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '18615',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '18615',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f79cb570',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '000011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '18615',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182010010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '010010',
                'ReferenceNumber' => '000182010010',
                'OrderNumber' => '000182010010',
            ),
            'amount' => '1001',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182010011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '010011',
                'ReferenceNumber' => '000182010011',
                'OrderNumber' => '000182010011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '1afc6c97',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '010011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '1001',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182020010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '020010',
                'ReferenceNumber' => '000182020010',
                'OrderNumber' => '000182020010',
            ),
            'amount' => '1550',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182120010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '120010',
                'ReferenceNumber' => '000182120010',
                'OrderNumber' => '000182120010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxODIxMjAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '7673',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182120011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '120011',
                'ReferenceNumber' => '000182120011',
                'OrderNumber' => '000182120011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxODIxMjAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f0625d65',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '120011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7673',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182130010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '130010',
                'ReferenceNumber' => '000182130010',
                'OrderNumber' => '000182130010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxODIxMzAwMTA=',
            ),
            'amount' => '7505',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182130011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '130011',
                'ReferenceNumber' => '000182130011',
                'OrderNumber' => '000182130011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7505',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7505',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxODIxMzAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '921d1548',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '130011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7505',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182140010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '140010',
                'ReferenceNumber' => '000182140010',
                'OrderNumber' => '000182140010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDAxODIxNDAwMTA=',
            ),
            'amount' => '7601',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182240010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '240010',
                'ReferenceNumber' => '000182240010',
                'OrderNumber' => '000182240010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '7691',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182240011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '240011',
                'ReferenceNumber' => '000182240011',
                'OrderNumber' => '000182240011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'bb923e7c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '240011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7691',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182250010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250010',
                'ReferenceNumber' => '000182250010',
                'OrderNumber' => '000182250010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '10006',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182250011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250011',
                'ReferenceNumber' => '000182250011',
                'OrderNumber' => '000182250011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '10006',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '10006',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'e676deb0',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '250011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '10006',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000182260010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005562231212123',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '260010',
                'ReferenceNumber' => '000182260010',
                'OrderNumber' => '000182260010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '10078',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186740010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '740010',
                'ReferenceNumber' => '000186740010',
                'OrderNumber' => '000186740010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '7611',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186750010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '750010',
                'ReferenceNumber' => '000186750010',
                'OrderNumber' => '000186750010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '7609',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186760010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '760010',
                'ReferenceNumber' => '000186760010',
                'OrderNumber' => '000186760010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '7605',
            'currency' => '840',
        );

        // Act
        $request = $gateway->refund($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186770010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '770010',
                'ReferenceNumber' => '000186770010',
                'OrderNumber' => '000186770010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '7603',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780010',
                'ReferenceNumber' => '000186780010',
                'OrderNumber' => '000186780010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '7619',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186790010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '790010',
                'ReferenceNumber' => '000186790010',
                'OrderNumber' => '000186790010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '7615',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '860010',
                'ReferenceNumber' => '000186860010',
                'OrderNumber' => '000186860010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'amount' => '7607',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186860011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '860011',
                'ReferenceNumber' => '000186860011',
                'OrderNumber' => '000186860011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7607',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7607',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '3d6b10d1',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '860011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7607',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186870010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '870010',
                'ReferenceNumber' => '000186870010',
                'OrderNumber' => '000186870010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '7601',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186870011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '870011',
                'ReferenceNumber' => '000186870011',
                'OrderNumber' => '000186870011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7601',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7601',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd583e34c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '870011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7601',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186880010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '880010',
                'ReferenceNumber' => '000186880010',
                'OrderNumber' => '000186880010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '7617',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186880011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '880011',
                'ReferenceNumber' => '000186880011',
                'OrderNumber' => '000186880011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7617',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7617',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '02',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '891cf5c3',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '880011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7617',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186890010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '890010',
                'ReferenceNumber' => '000186890010',
                'OrderNumber' => '000186890010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '7613',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000186890011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701112222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '890011',
                'ReferenceNumber' => '000186890011',
                'OrderNumber' => '000186890011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7613',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7613',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '2fbdc46e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '890011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7613',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521380010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '380010',
                'ReferenceNumber' => '000521380010',
                'OrderNumber' => '000521380010',
            ),
            'amount' => '76054',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000521390010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '390010',
                'ReferenceNumber' => '000521390010',
                'OrderNumber' => '000521390010',
            ),
            'amount' => '84315',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521420010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '420010',
                'ReferenceNumber' => '000521420010',
                'OrderNumber' => '000521420010',
            ),
            'amount' => '76050',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000521520010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '520010',
                'ReferenceNumber' => '000521520010',
                'OrderNumber' => '000521520010',
            ),
            'amount' => '34128',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521820010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '820010',
                'ReferenceNumber' => '000521820010',
                'OrderNumber' => '000521820010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '62107',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '62107',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '62107',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521840010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '840010',
                'ReferenceNumber' => '000521840010',
                'OrderNumber' => '000521840010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '83301',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '83301',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '83301',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860010',
                'ReferenceNumber' => '000521860010',
                'OrderNumber' => '000521860010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '34103',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '34103',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '34103',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521900010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '900010',
                'ReferenceNumber' => '000521900010',
                'OrderNumber' => '000521900010',
            ),
            'amount' => '59098',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000521900011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '900011',
                'ReferenceNumber' => '000521900011',
                'OrderNumber' => '000521900011',
            ),
            'amount' => '29549',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521930010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '930010',
                'ReferenceNumber' => '000521930010',
                'OrderNumber' => '000521930010',
            ),
            'amount' => '59094',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000521930011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '930011',
                'ReferenceNumber' => '000521930011',
                'OrderNumber' => '000521930011',
            ),
            'amount' => '29547',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521980010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '980010',
                'ReferenceNumber' => '000521980010',
                'OrderNumber' => '000521980010',
            ),
            'amount' => '84794',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000521980011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '980011',
                'ReferenceNumber' => '000521980011',
                'OrderNumber' => '000521980011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'cd41d290',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '980011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '84794',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000522000010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '000010',
                'ReferenceNumber' => '000522000010',
                'OrderNumber' => '000522000010',
            ),
            'amount' => '54208',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000522000011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '000011',
                'ReferenceNumber' => '000522000011',
                'OrderNumber' => '000522000011',
            ),
            'amount' => '27104',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000522030010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '030010',
                'ReferenceNumber' => '000522030010',
                'OrderNumber' => '000522030010',
            ),
            'amount' => '54204',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000522030011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '030011',
                'ReferenceNumber' => '000522030011',
                'OrderNumber' => '000522030011',
            ),
            'amount' => '27102',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523220010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '220010',
                'ReferenceNumber' => '000523220010',
                'OrderNumber' => '000523220010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '62261',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '62261',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '62261',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523260010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '260010',
                'ReferenceNumber' => '000523260010',
                'OrderNumber' => '000523260010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '83272',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '83272',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '83272',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523320010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '320010',
                'ReferenceNumber' => '000523320010',
                'OrderNumber' => '000523320010',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '34258',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '34258',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'amount' => '34258',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523460010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '460010',
                'ReferenceNumber' => '000523460010',
                'OrderNumber' => '000523460010',
            ),
            'amount' => '60232',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523460011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '460011',
                'ReferenceNumber' => '000523460011',
                'OrderNumber' => '000523460011',
            ),
            'amount' => '30116',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523470010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '470010',
                'ReferenceNumber' => '000523470010',
                'OrderNumber' => '000523470010',
            ),
            'amount' => '60334',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523470011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '470011',
                'ReferenceNumber' => '000523470011',
                'OrderNumber' => '000523470011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '30164',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '30164',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '00668c8e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '470011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '30164',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523480010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '480010',
                'ReferenceNumber' => '000523480010',
                'OrderNumber' => '000523480010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '60132',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523480011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '480011',
                'ReferenceNumber' => '000523480011',
                'OrderNumber' => '000523480011',
            ),
            'amount' => '30066',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523500010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '500010',
                'ReferenceNumber' => '000523500010',
                'OrderNumber' => '000523500010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '62888',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523500011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '500011',
                'ReferenceNumber' => '000523500011',
                'OrderNumber' => '000523500011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '62885',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '62885',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '50fa9000',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '500011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '62885',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523600010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '600010',
                'ReferenceNumber' => '000523600010',
                'OrderNumber' => '000523600010',
            ),
            'amount' => '77190',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523600011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '600011',
                'ReferenceNumber' => '000523600011',
                'OrderNumber' => '000523600011',
            ),
            'amount' => '38595',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523610010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '610010',
                'ReferenceNumber' => '000523610010',
                'OrderNumber' => '000523610010',
            ),
            'amount' => '77292',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523610011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '610011',
                'ReferenceNumber' => '000523610011',
                'OrderNumber' => '000523610011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '38643',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '38643',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'bd862e64',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '610011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '38643',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523620010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '620010',
                'ReferenceNumber' => '000523620010',
                'OrderNumber' => '000523620010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '77090',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523620011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '620011',
                'ReferenceNumber' => '000523620011',
                'OrderNumber' => '000523620011',
            ),
            'amount' => '38545',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523650010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '650010',
                'ReferenceNumber' => '000523650010',
                'OrderNumber' => '000523650010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '77092',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523650011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '650011',
                'ReferenceNumber' => '000523650011',
                'OrderNumber' => '000523650011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '38543',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '38543',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '6e49c9c7',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '650011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '38543',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523740010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '740010',
                'ReferenceNumber' => '000523740010',
                'OrderNumber' => '000523740010',
            ),
            'amount' => '55342',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523740011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '740011',
                'ReferenceNumber' => '000523740011',
                'OrderNumber' => '000523740011',
            ),
            'amount' => '27671',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523750010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '750010',
                'ReferenceNumber' => '000523750010',
                'OrderNumber' => '000523750010',
            ),
            'amount' => '55444',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523750011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '750011',
                'ReferenceNumber' => '000523750011',
                'OrderNumber' => '000523750011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '27719',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '27719',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '8ed2edb4',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '750011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '27719',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523760010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '760010',
                'ReferenceNumber' => '000523760010',
                'OrderNumber' => '000523760010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '55242',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000523760011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '760011',
                'ReferenceNumber' => '000523760011',
                'OrderNumber' => '000523760011',
            ),
            'amount' => '27621',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605177111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780010',
                'ReferenceNumber' => '000523780010',
                'OrderNumber' => '000523780010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '35276',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000523780011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '379605177111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780011',
                'ReferenceNumber' => '000523780011',
                'OrderNumber' => '000523780011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '35273',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '35273',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '7f55e6e4',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '780011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '35273',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000524650010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '650010',
                'ReferenceNumber' => '000524650010',
                'OrderNumber' => '000524650010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '55444',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000524680010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680010',
                'ReferenceNumber' => '000524680010',
                'OrderNumber' => '000524680010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '55032',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000524690010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '690010',
                'ReferenceNumber' => '000524690010',
                'OrderNumber' => '000524690010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '35078',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000524830010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '830010',
                'ReferenceNumber' => '000524830010',
                'OrderNumber' => '000524830010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '13584',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000524840010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '840010',
                'ReferenceNumber' => '000524840010',
                'OrderNumber' => '000524840010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '13586',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000524860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '860010',
                'ReferenceNumber' => '000524860010',
                'OrderNumber' => '000524860010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '113626',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000524890010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '890010',
                'ReferenceNumber' => '000524890010',
                'OrderNumber' => '000524890010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '14930',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000524900010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '900010',
                'ReferenceNumber' => '000524900010',
                'OrderNumber' => '000524900010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '14932',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000524930010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605177111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '930010',
                'ReferenceNumber' => '000524930010',
                'OrderNumber' => '000524930010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '115028',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000525110010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '110010',
                'ReferenceNumber' => '000525110010',
                'OrderNumber' => '000525110010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '62880',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000525170010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '170010',
                'ReferenceNumber' => '000525170010',
                'OrderNumber' => '000525170010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1MjUxNzAwMTA=',
            ),
            'amount' => '13858',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000525190010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '190010',
                'ReferenceNumber' => '000525190010',
                'OrderNumber' => '000525190010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1MjUxOTAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '15228',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000525740010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '740010',
                'ReferenceNumber' => '000525740010',
                'OrderNumber' => '000525740010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '76890',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000525770010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '770010',
                'ReferenceNumber' => '000525770010',
                'OrderNumber' => '000525770010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '76684',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000525780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780010',
                'ReferenceNumber' => '000525780010',
                'OrderNumber' => '000525780010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '84786',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000525980010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '980010',
                'ReferenceNumber' => '000525980010',
                'OrderNumber' => '000525980010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '14052',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000525990010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '990010',
                'ReferenceNumber' => '000525990010',
                'OrderNumber' => '000525990010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '14054',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000526010010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '010010',
                'ReferenceNumber' => '000526010010',
                'OrderNumber' => '000526010010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '114100',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000526050010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '050010',
                'ReferenceNumber' => '000526050010',
                'OrderNumber' => '000526050010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '15282',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000526060010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '060010',
                'ReferenceNumber' => '000526060010',
                'OrderNumber' => '000526060010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '15284',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000526080010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '080010',
                'ReferenceNumber' => '000526080010',
                'OrderNumber' => '000526080010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '115306',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000527770010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '770010',
                'ReferenceNumber' => '000527770010',
                'OrderNumber' => '000527770010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '55342',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000527770011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '770011',
                'ReferenceNumber' => '000527770011',
                'OrderNumber' => '000527770011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '27671',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000527780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780010',
                'ReferenceNumber' => '000527780010',
                'OrderNumber' => '000527780010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '55034',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000527800010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605177111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '800010',
                'ReferenceNumber' => '000527800010',
                'OrderNumber' => '000527800010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '35264',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000527800011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '379605177111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '800011',
                'ReferenceNumber' => '000527800011',
                'OrderNumber' => '000527800011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '35261',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '35261',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '722e70c1',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '800011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '35261',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000527980010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605177111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '980010',
                'ReferenceNumber' => '000527980010',
                'OrderNumber' => '000527980010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '115008',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000527980011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '379605177111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '980011',
                'ReferenceNumber' => '000527980011',
                'OrderNumber' => '000527980011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a23f1eec',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '980011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '115008',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000527990010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '990010',
                'ReferenceNumber' => '000527990010',
                'OrderNumber' => '000527990010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '113526',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000527990011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '990011',
                'ReferenceNumber' => '000527990011',
                'OrderNumber' => '000527990011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c345dcd1',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '990011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '113526',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528150011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '150011',
                'ReferenceNumber' => '000528150011',
                'OrderNumber' => '000528150011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '109ff7a1',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '150011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34153',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528160010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '160010',
                'ReferenceNumber' => '000528160010',
                'OrderNumber' => '000528160010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '34689',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528160011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '160011',
                'ReferenceNumber' => '000528160011',
                'OrderNumber' => '000528160011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a115e389',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '160011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '34689',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528660010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '660010',
                'ReferenceNumber' => '000528660010',
                'OrderNumber' => '000528660010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '57311',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528660011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '660011',
                'ReferenceNumber' => '000528660011',
                'OrderNumber' => '000528660011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '4563067f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '660011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '57311',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528670010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '670010',
                'ReferenceNumber' => '000528670010',
                'OrderNumber' => '000528670010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '62988',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528670011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '670011',
                'ReferenceNumber' => '000528670011',
                'OrderNumber' => '000528670011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '62877',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '62877',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'b1c26a67',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '670011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '62877',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528680010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680010',
                'ReferenceNumber' => '000528680010',
                'OrderNumber' => '000528680010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '57207',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528680011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680011',
                'ReferenceNumber' => '000528680011',
                'OrderNumber' => '000528680011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '6b3278bd',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '680011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '57207',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528820010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '820010',
                'ReferenceNumber' => '000528820010',
                'OrderNumber' => '000528820010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1Mjg4MjAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '15146',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528820011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '820011',
                'ReferenceNumber' => '000528820011',
                'OrderNumber' => '000528820011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1Mjg4MjAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '867bef73',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '820011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '15146',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528830010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '830010',
                'ReferenceNumber' => '000528830010',
                'OrderNumber' => '000528830010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1Mjg4MzAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '15236',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528830011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '830011',
                'ReferenceNumber' => '000528830011',
                'OrderNumber' => '000528830011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '15236',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '15236',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1Mjg4MzAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f6acb584',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '830011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '15236',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528950010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '950010',
                'ReferenceNumber' => '000528950010',
                'OrderNumber' => '000528950010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '57711',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528950011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '950011',
                'ReferenceNumber' => '000528950011',
                'OrderNumber' => '000528950011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '86ab0ea6',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '950011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '57711',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528960010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '960010',
                'ReferenceNumber' => '000528960010',
                'OrderNumber' => '000528960010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '57208',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000528960011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '960011',
                'ReferenceNumber' => '000528960011',
                'OrderNumber' => '000528960011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c9a42a0c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '960011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '57208',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529010010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '010010',
                'ReferenceNumber' => '000529010010',
                'OrderNumber' => '000529010010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1MjkwMTAwMTA=',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '15132',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529010011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '010011',
                'ReferenceNumber' => '000529010011',
                'OrderNumber' => '000529010011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'SecureTransactionGroup' => array(
                'VisaSecureTransactionAuthenticationData' => 'MDAwMDAwMDAwMDA1MjkwMTAwMTE=',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'cba47138',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '010011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '15132',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529600010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '600010',
                'ReferenceNumber' => '000529600010',
                'OrderNumber' => '000529600010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '77292',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000529600011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '600011',
                'ReferenceNumber' => '000529600011',
                'OrderNumber' => '000529600011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '38646',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '38646',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '345db489',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '600011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '38646',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529610010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '610010',
                'ReferenceNumber' => '000529610010',
                'OrderNumber' => '000529610010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '76882',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000529610011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '610011',
                'ReferenceNumber' => '000529610011',
                'OrderNumber' => '000529610011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '38441',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529630010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '630010',
                'ReferenceNumber' => '000529630010',
                'OrderNumber' => '000529630010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '84794',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529630011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '630011',
                'ReferenceNumber' => '000529630011',
                'OrderNumber' => '000529630011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd9cca6a9',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '630011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '84794',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529650010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '650010',
                'ReferenceNumber' => '000529650010',
                'OrderNumber' => '000529650010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '76884',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000529650011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '650011',
                'ReferenceNumber' => '000529650011',
                'OrderNumber' => '000529650011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '38442',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '38442',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a33adbcb',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '650011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '38442',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529890010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '890010',
                'ReferenceNumber' => '000529890010',
                'OrderNumber' => '000529890010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '15464',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529890011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '890011',
                'ReferenceNumber' => '000529890011',
                'OrderNumber' => '000529890011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '4e6c3571',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '890011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '15464',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529900010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '900010',
                'ReferenceNumber' => '000529900010',
                'OrderNumber' => '000529900010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '15462',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529900011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '900011',
                'ReferenceNumber' => '000529900011',
                'OrderNumber' => '000529900011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '15462',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '15462',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c0d2fac7',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '900011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '15462',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529910010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '910010',
                'ReferenceNumber' => '000529910010',
                'OrderNumber' => '000529910010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '14040',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000529910011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '910011',
                'ReferenceNumber' => '000529910011',
                'OrderNumber' => '000529910011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '7020',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529920010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '920010',
                'ReferenceNumber' => '000529920010',
                'OrderNumber' => '000529920010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '114094',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000529920011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '920011',
                'ReferenceNumber' => '000529920011',
                'OrderNumber' => '000529920011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '57047',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529950010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '950010',
                'ReferenceNumber' => '000529950010',
                'OrderNumber' => '000529950010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '115294',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000529950011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '950011',
                'ReferenceNumber' => '000529950011',
                'OrderNumber' => '000529950011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '57647',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000529990010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '990010',
                'ReferenceNumber' => '000529990010',
                'OrderNumber' => '000529990010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'amount' => '14042',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000529990011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '990011',
                'ReferenceNumber' => '000529990011',
                'OrderNumber' => '000529990011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Z',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '7018',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '7018',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '01',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '8ed35897',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '990011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '7018',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000530100010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '100010',
                'ReferenceNumber' => '000530100010',
                'OrderNumber' => '000530100010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '82794',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000530100011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '100011',
                'ReferenceNumber' => '000530100011',
                'OrderNumber' => '000530100011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a833643c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '100011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '82794',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000530120010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '120010',
                'ReferenceNumber' => '000530120010',
                'OrderNumber' => '000530120010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '76982',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000530120011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '120011',
                'ReferenceNumber' => '000530120011',
                'OrderNumber' => '000530120011',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '38491',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000532240010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '240010',
                'ReferenceNumber' => '000532240010',
                'OrderNumber' => '000532240010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '216092',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000532250010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '250010',
                'ReferenceNumber' => '000532250010',
                'OrderNumber' => '000532250010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '216094',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000532260010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '260010',
                'ReferenceNumber' => '000532260010',
                'OrderNumber' => '000532260010',
            ),
            'amount' => '16252',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000532270010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '270010',
                'ReferenceNumber' => '000532270010',
                'OrderNumber' => '000532270010',
            ),
            'amount' => '16254',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000532350010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '350010',
                'ReferenceNumber' => '000532350010',
                'OrderNumber' => '000532350010',
            ),
            'amount' => '16248',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000532360010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '360010',
                'ReferenceNumber' => '000532360010',
                'OrderNumber' => '000532360010',
            ),
            'amount' => '16250',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000532420010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '420010',
                'ReferenceNumber' => '000532420010',
                'OrderNumber' => '000532420010',
            ),
            'amount' => '16240',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000533450010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '450010',
                'ReferenceNumber' => '000533450010',
                'OrderNumber' => '000533450010',
            ),
            'amount' => '41406',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533450011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '450011',
                'ReferenceNumber' => '000533450011',
                'OrderNumber' => '000533450011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'fa03c035',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '450011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41406',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533460010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '460010',
                'ReferenceNumber' => '000533460010',
                'OrderNumber' => '000533460010',
            ),
            'amount' => '241192',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000533460011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '460011',
                'ReferenceNumber' => '000533460011',
                'OrderNumber' => '000533460011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '120596',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '120596',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '4421dccf',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '460011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '120596',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533560010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '560010',
                'ReferenceNumber' => '000533560010',
                'OrderNumber' => '000533560010',
            ),
            'amount' => '241370',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000533560011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005571702222222',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '560011',
                'ReferenceNumber' => '000533560011',
                'OrderNumber' => '000533560011',
            ),
            'amount' => '120685',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533570010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4055010000000005',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '570010',
                'ReferenceNumber' => '000533570010',
                'OrderNumber' => '000533570010',
            ),
            'amount' => '241230',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533570011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4055010000000005',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '570011',
                'ReferenceNumber' => '000533570011',
                'OrderNumber' => '000533570011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '241230',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '241230',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '0570869c',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '570011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '241230',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533580010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '580010',
                'ReferenceNumber' => '000533580010',
                'OrderNumber' => '000533580010',
            ),
            'amount' => '241074',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533580011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511117771',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '580011',
                'ReferenceNumber' => '000533580011',
                'OrderNumber' => '000533580011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '241074',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '241074',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '7d6cb5ff',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '580011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '241074',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533660010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '660010',
                'ReferenceNumber' => '000533660010',
                'OrderNumber' => '000533660010',
            ),
            'amount' => '41402',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533660011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '660011',
                'ReferenceNumber' => '000533660011',
                'OrderNumber' => '000533660011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '7ddb9bf0',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '660011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41402',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533670010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '670010',
                'ReferenceNumber' => '000533670010',
                'OrderNumber' => '000533670010',
            ),
            'amount' => '241242',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000533670011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180000005550',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '670011',
                'ReferenceNumber' => '000533670011',
                'OrderNumber' => '000533670011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '120621',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '120621',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9da795d7',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '670011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '120621',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533770010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '770010',
                'ReferenceNumber' => '000533770010',
                'OrderNumber' => '000533770010',
            ),
            'amount' => '241298',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533770011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180273333333',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '770011',
                'ReferenceNumber' => '000533770011',
                'OrderNumber' => '000533770011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '241298',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '241298',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'abde99aa',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '770011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '241298',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5405001111111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '780010',
                'ReferenceNumber' => '000533780010',
                'OrderNumber' => '000533780010',
            ),
            'amount' => '241082',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533780011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5405001111111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '780011',
                'ReferenceNumber' => '000533780011',
                'OrderNumber' => '000533780011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '241082',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '241082',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '3f0160ae',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '780011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '241082',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860010',
                'ReferenceNumber' => '000533860010',
                'OrderNumber' => '000533860010',
            ),
            'amount' => '41394',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533860011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860011',
                'ReferenceNumber' => '000533860011',
                'OrderNumber' => '000533860011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '158f9c7f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '860011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41394',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533870010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '870010',
                'ReferenceNumber' => '000533870010',
                'OrderNumber' => '000533870010',
            ),
            'amount' => '241152',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000533870011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '870011',
                'ReferenceNumber' => '000533870011',
                'OrderNumber' => '000533870011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '120576',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '120576',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'f8bf9233',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '870011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '120576',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533950010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '950010',
                'ReferenceNumber' => '000533950010',
                'OrderNumber' => '000533950010',
            ),
            'amount' => '241154',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000533950011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '375987654111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '950011',
                'ReferenceNumber' => '000533950011',
                'OrderNumber' => '000533950011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '120577',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '120577',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c6081f68',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '950011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '120577',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533960010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '960010',
                'ReferenceNumber' => '000533960010',
                'OrderNumber' => '000533960010',
            ),
            'amount' => '41328',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533960011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '960011',
                'ReferenceNumber' => '000533960011',
                'OrderNumber' => '000533960011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9808d08e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '960011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41328',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533970010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '970010',
                'ReferenceNumber' => '000533970010',
                'OrderNumber' => '000533970010',
            ),
            'amount' => '41016',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000533970011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '970011',
                'ReferenceNumber' => '000533970011',
                'OrderNumber' => '000533970011',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '41016',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '41016',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '6f6da90f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '970011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '41016',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000534520010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '520010',
                'ReferenceNumber' => '000534520010',
                'OrderNumber' => '000534520010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11124',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000534530010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '371030089111551',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '530010',
                'ReferenceNumber' => '000534530010',
                'OrderNumber' => '000534530010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11126',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000534620010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '620010',
                'ReferenceNumber' => '000534620010',
                'OrderNumber' => '000534620010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '11750',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000534770010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '770010',
                'ReferenceNumber' => '000534770010',
                'OrderNumber' => '000534770010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11956',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000534780010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '780010',
                'ReferenceNumber' => '000534780010',
                'OrderNumber' => '000534780010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11958',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000541820010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '820010',
                'ReferenceNumber' => '000541820010',
                'OrderNumber' => '000541820010',
            ),
            'amount' => '14426',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544370010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '370010',
                'ReferenceNumber' => '000544370010',
                'OrderNumber' => '000544370010',
            ),
            'amount' => '10624',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000544370011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '370011',
                'ReferenceNumber' => '000544370011',
                'OrderNumber' => '000544370011',
            ),
            'amount' => '5312',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544390010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '390010',
                'ReferenceNumber' => '000544390010',
                'OrderNumber' => '000544390010',
            ),
            'amount' => '14152',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544390011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '390011',
                'ReferenceNumber' => '000544390011',
                'OrderNumber' => '000544390011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '31254677',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '390011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '14152',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Authorization';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544400010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '400010',
                'ReferenceNumber' => '000544400010',
                'OrderNumber' => '000544400010',
            ),
            'amount' => '10622',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000544400011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '3566000022222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '400011',
                'ReferenceNumber' => '000544400011',
                'OrderNumber' => '000544400011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '5311',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '5311',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '73b29cee',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '400011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '5311',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544420010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '420010',
                'ReferenceNumber' => '000544420010',
                'OrderNumber' => '000544420010',
            ),
            'amount' => '14150',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544420011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '420011',
                'ReferenceNumber' => '000544420011',
                'OrderNumber' => '000544420011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '14150',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '14150',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9b2db2e0',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '420011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '14150',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544470010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '470010',
                'ReferenceNumber' => '000544470010',
                'OrderNumber' => '000544470010',
            ),
            'amount' => '14168',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000544470011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '470011',
                'ReferenceNumber' => '000544470011',
                'OrderNumber' => '000544470011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '25549db7',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '470011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '14168',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549250010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '4264281500001119',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '250010',
                'ReferenceNumber' => '000549250010',
                'OrderNumber' => '000549250010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '259809',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('P', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549260010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '4264281555555555',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '260010',
                'ReferenceNumber' => '000549260010',
                'OrderNumber' => '000549260010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '259109',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('N', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549410010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '5424180000000007',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '410010',
                'ReferenceNumber' => '000549410010',
                'OrderNumber' => '000549410010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '264157',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('N', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549420010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '5424180000007770',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '420010',
                'ReferenceNumber' => '000549420010',
                'OrderNumber' => '000549420010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '270527',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549570010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '379605175555555',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '570010',
                'ReferenceNumber' => '000549570010',
                'OrderNumber' => '000549570010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '247729',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('U', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549580010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '379605170000003',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '580010',
                'ReferenceNumber' => '000549580010',
                'OrderNumber' => '000549580010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '242957',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('A', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549730010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '730010',
                'ReferenceNumber' => '000549730010',
                'OrderNumber' => '000549730010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '281908',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000549750010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'number' => '6011361000000000',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '750010',
                'ReferenceNumber' => '000549750010',
                'OrderNumber' => '000549750010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '273409',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('N', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000550550010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '4264281500003339',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '550010',
                'ReferenceNumber' => '000550550010',
                'OrderNumber' => '000550550010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '260301',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('P', $response->getAVSResultCode());
        $this->assertEquals('NotPrt', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000550550011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281500003339',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '550011',
                'ReferenceNumber' => '000550550011',
                'OrderNumber' => '000550550011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'P',
                'CCVResultCode' => 'NotPrt',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '260298',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '260298',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'fe1d3b84',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '550011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '260298',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000551810010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605175555555',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '810010',
                'ReferenceNumber' => '000551810010',
                'OrderNumber' => '000551810010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '247401',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('U', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000551810011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '379605175555555',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '810011',
                'ReferenceNumber' => '000551810011',
                'OrderNumber' => '000551810011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'U',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '247398',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '247398',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9b1cfac7',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '810011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '247398',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000551820010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '1234',
                'number' => '379605177777777',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '820010',
                'ReferenceNumber' => '000551820010',
                'OrderNumber' => '000551820010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '247500',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('U', $response->getAVSResultCode());
        $this->assertEquals('NoMtch', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000551820011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '379605177777777',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '820011',
                'ReferenceNumber' => '000551820011',
                'OrderNumber' => '000551820011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'U',
                'CCVResultCode' => 'NoMtch',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '247497',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '247497',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '22b71284',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '820011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '247497',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000552070010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011361000000000',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '070010',
                'ReferenceNumber' => '000552070010',
                'OrderNumber' => '000552070010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '273700',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('N', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000552070011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000000000',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '070011',
                'ReferenceNumber' => '000552070011',
                'OrderNumber' => '000552070011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'N',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '273697',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '273697',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '22c6ff72',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '070011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '273697',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000552080010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011361000000000',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '080010',
                'ReferenceNumber' => '000552080010',
                'OrderNumber' => '000552080010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '273701',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('N', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000552080011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000000000',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '080011',
                'ReferenceNumber' => '000552080011',
                'OrderNumber' => '000552080011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'N',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '273698',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '273698',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd324a402',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '080011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '273698',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000555470010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '378730000111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '470010',
                'ReferenceNumber' => '000555470010',
                'OrderNumber' => '000555470010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11310',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000555470011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '378730000111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '470011',
                'ReferenceNumber' => '000555470011',
                'OrderNumber' => '000555470011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '11310',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '11310',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '46a5023a',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '470011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '11310',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000555480010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '378730000111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '480010',
                'ReferenceNumber' => '000555480010',
                'OrderNumber' => '000555480010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11180',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000555480011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '378730000111118',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '480011',
                'ReferenceNumber' => '000555480011',
                'OrderNumber' => '000555480011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '11180',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '11180',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '406e7155',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '480011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '11180',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000556670010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '670010',
                'ReferenceNumber' => '000556670010',
                'OrderNumber' => '000556670010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11922',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000556670011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '670011',
                'ReferenceNumber' => '000556670011',
                'OrderNumber' => '000556670011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '11922',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '11922',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '2a252a03',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '670011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '11922',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000556680010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4055011111111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680010',
                'ReferenceNumber' => '000556680010',
                'OrderNumber' => '000556680010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11364',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000556680011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '4055011111111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '680011',
                'ReferenceNumber' => '000556680011',
                'OrderNumber' => '000556680011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '11364',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '11364',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '29c02782',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '680011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '11364',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000557910010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '910010',
                'ReferenceNumber' => '000557910010',
                'OrderNumber' => '000557910010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '12216',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000557910011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '910011',
                'ReferenceNumber' => '000557910011',
                'OrderNumber' => '000557910011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '12216',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '12216',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '1b8dab49',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '910011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12216',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000557920010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '920010',
                'ReferenceNumber' => '000557920010',
                'OrderNumber' => '000557920010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '12004',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000557920011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '920011',
                'ReferenceNumber' => '000557920011',
                'OrderNumber' => '000557920011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '12004',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '12004',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '277d776b',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '920011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12004',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000558850010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '850010',
                'ReferenceNumber' => '000558850010',
                'OrderNumber' => '000558850010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '12690',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000558850011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '850011',
                'ReferenceNumber' => '000558850011',
                'OrderNumber' => '000558850011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '12690',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '12690',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '1240898f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '850011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12690',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000558860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '860010',
                'ReferenceNumber' => '000558860010',
                'OrderNumber' => '000558860010',
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'amount' => '11058',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000558860011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_ECOMM'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '59',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '860011',
                'ReferenceNumber' => '000558860011',
                'OrderNumber' => '000558860011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '11058',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '11058',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'EcommGroup' => array(
                'EcommURL' => 'google.com',
                'EcommTransactionIndicator' => '03',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'd8d7d3b9',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '860011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '11058',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000559750010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '750010',
                'ReferenceNumber' => '000559750010',
                'OrderNumber' => '000559750010',
            ),
            'amount' => '111228',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000559750011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '750011',
                'ReferenceNumber' => '000559750011',
                'OrderNumber' => '000559750011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '111228',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '111228',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '202a934f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '750011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '111228',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000559760010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '760010',
                'ReferenceNumber' => '000559760010',
                'OrderNumber' => '000559760010',
            ),
            'amount' => '111078',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000559760011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '371030089111114',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '760011',
                'ReferenceNumber' => '000559760011',
                'OrderNumber' => '000559760011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '111078',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '111078',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9ed4979d',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '760011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '111078',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000561160010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '160010',
                'ReferenceNumber' => '000561160010',
                'OrderNumber' => '000561160010',
            ),
            'amount' => '12544',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000561160011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '160011',
                'ReferenceNumber' => '000561160011',
                'OrderNumber' => '000561160011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '12544',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '12544',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '95c4eebe',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '160011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12544',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000561170010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '170010',
                'ReferenceNumber' => '000561170010',
                'OrderNumber' => '000561170010',
            ),
            'amount' => '12546',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000561170011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '4005571701111111',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '170011',
                'ReferenceNumber' => '000561170011',
                'OrderNumber' => '000561170011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '12546',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '12546',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'b648f8a9',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '170011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '12546',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000563390010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5405001111111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '390010',
                'ReferenceNumber' => '000563390010',
                'OrderNumber' => '000563390010',
            ),
            'amount' => '112464',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000563390011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5405001111111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '390011',
                'ReferenceNumber' => '000563390011',
                'OrderNumber' => '000563390011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '112464',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '112464',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '5af381ff',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '390011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '112464',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000563400010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5405001111111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '400010',
                'ReferenceNumber' => '000563400010',
                'OrderNumber' => '000563400010',
            ),
            'amount' => '112282',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000563400011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '5405001111111116',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '400011',
                'ReferenceNumber' => '000563400011',
                'OrderNumber' => '000563400011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '112282',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '112282',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '9f328e8e',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '400011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '112282',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000564570010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '570010',
                'ReferenceNumber' => '000564570010',
                'OrderNumber' => '000564570010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '112108',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000564570011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '570011',
                'ReferenceNumber' => '000564570011',
                'OrderNumber' => '000564570011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '112108',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '112108',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '515a7b27',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '570011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '112108',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000564580010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '580010',
                'ReferenceNumber' => '000564580010',
                'OrderNumber' => '000564580010',
            ),
            'amount' => '111530',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000564580011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '580011',
                'ReferenceNumber' => '000564580011',
                'OrderNumber' => '000564580011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '111530',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '111530',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ae79d543',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '580011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '111530',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000564590010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '590010',
                'ReferenceNumber' => '000564590010',
                'OrderNumber' => '000564590010',
            ),
            'amount' => '111536',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000564590011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '590011',
                'ReferenceNumber' => '000564590011',
                'OrderNumber' => '000564590011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '111536',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '111536',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ddf44e09',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '590011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '111536',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000565070010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'billingAddress1' => '1307 Broad Hollow Road',
                'billingPostcode' => '11747',
                'cvv' => '123',
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '070010',
                'ReferenceNumber' => '000565070010',
                'OrderNumber' => '000565070010',
            ),
            'CustomerInformationGroup' => array(
                'AVSBillingAddress' => '1307 Broad Hollow Road',
                'AVSBillingPostalCode' => '11747',
            ),
            'amount' => '111940',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Y', $response->getAVSResultCode());
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000565070011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_MOTO'));

        $requestData = array(
            'card' => array(
                'number' => '6011208702222228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '08',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '01',
                'TerminalLocationIndicator' => '1',
                'CardCaptureCapability' => '0',
                'STAN' => '070011',
                'ReferenceNumber' => '000565070011',
                'OrderNumber' => '000565070011',
            ),
            'CardGroup' => array(
                'MergeWithExisting' => true,
                'AVSResultCode' => 'Y',
                'CCVResultCode' => 'Match',
            ),
            'AdditionalAmountGroups' => array(
                array(
                    'AdditionalAmount' => '111940',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'FirstAuthAmt',
                ),
                array(
                    'AdditionalAmount' => '111940',
                    'AdditionalAmountCurrency' => '840',
                    'AdditionalAmountType' => 'TotalAuthAmt',
                ),
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '4102722b',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '070011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '111940',
            'currency' => '840',
        );

        // Act
        $request = $gateway->capture($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569010010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '010010',
                'ReferenceNumber' => '000569010010',
                'OrderNumber' => '000569010010',
            ),
            'amount' => '11826',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569020010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '020010',
                'ReferenceNumber' => '000569020010',
                'OrderNumber' => '000569020010',
            ),
            'amount' => '11712',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569030010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '030010',
                'ReferenceNumber' => '000569030010',
                'OrderNumber' => '000569030010',
            ),
            'amount' => '11720',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569040010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '040010',
                'ReferenceNumber' => '000569040010',
                'OrderNumber' => '000569040010',
            ),
            'amount' => '11728',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569050010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '1234',
                'number' => '379605176666666',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'amex',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '050010',
                'ReferenceNumber' => '000569050010',
                'OrderNumber' => '000569050010',
            ),
            'amount' => '11736',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569610010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '610010',
                'ReferenceNumber' => '000569610010',
                'OrderNumber' => '000569610010',
            ),
            'amount' => '12878',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569620010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '620010',
                'ReferenceNumber' => '000569620010',
                'OrderNumber' => '000569620010',
            ),
            'amount' => '12486',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569640010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '640010',
                'ReferenceNumber' => '000569640010',
                'OrderNumber' => '000569640010',
            ),
            'amount' => '12504',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000569650010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '4264281511112228',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '650010',
                'ReferenceNumber' => '000569650010',
                'OrderNumber' => '000569650010',
            ),
            'amount' => '12512',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570150010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '150010',
                'ReferenceNumber' => '000570150010',
                'OrderNumber' => '000570150010',
            ),
            'amount' => '13580',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570160010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '160010',
                'ReferenceNumber' => '000570160010',
                'OrderNumber' => '000570160010',
            ),
            'amount' => '13392',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570180010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '180010',
                'ReferenceNumber' => '000570180010',
                'OrderNumber' => '000570180010',
            ),
            'amount' => '13410',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570190010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '190010',
                'ReferenceNumber' => '000570190010',
                'OrderNumber' => '000570190010',
            ),
            'amount' => '13418',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570600010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '600010',
                'ReferenceNumber' => '000570600010',
                'OrderNumber' => '000570600010',
            ),
            'amount' => '14556',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570610010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '610010',
                'ReferenceNumber' => '000570610010',
                'OrderNumber' => '000570610010',
            ),
            'amount' => '14116',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570620010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '620010',
                'ReferenceNumber' => '000570620010',
                'OrderNumber' => '000570620010',
            ),
            'amount' => '14124',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570630010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '630010',
                'ReferenceNumber' => '000570630010',
                'OrderNumber' => '000570630010',
            ),
            'amount' => '14312',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000570650010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '650010',
                'ReferenceNumber' => '000570650010',
                'OrderNumber' => '000570650010',
            ),
            'amount' => '14328',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000584940010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '6240000006438706',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '940010',
                'ReferenceNumber' => '000584940010',
                'OrderNumber' => '000584940010',
            ),
            'amount' => '18012',
            'currency' => '840',
        );

        // Act
        $request = $gateway->purchase($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000584940011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6240000006438706',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '940011',
                'ReferenceNumber' => '000584940011',
                'OrderNumber' => '000584940011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'a58214a6',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '940011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '18012',
            'currency' => '840',
        );

        // Act
        $requestData['CommonGroup']['TransactionType'] = 'Sale';
        $request = $gateway->void($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756850010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '850010',
                'ReferenceNumber' => '000756850010',
                'OrderNumber' => '000756850010',
            ),
            'amount' => '19632',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000756850011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '850011',
                'ReferenceNumber' => '000756850011',
                'OrderNumber' => '000756850011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '088b7334',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '850011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9716',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756860010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860010',
                'ReferenceNumber' => '000756860010',
                'OrderNumber' => '000756860010',
            ),
            'amount' => '9437',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756860011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '860011',
                'ReferenceNumber' => '000756860011',
                'OrderNumber' => '000756860011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'fd1ebd20',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '860011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9337',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756880010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '880010',
                'ReferenceNumber' => '000756880010',
                'OrderNumber' => '000756880010',
            ),
            'amount' => '9439',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756880011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '880011',
                'ReferenceNumber' => '000756880011',
                'OrderNumber' => '000756880011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'be668404',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '880011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9339',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756890010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701118880',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '890010',
                'ReferenceNumber' => '000756890010',
                'OrderNumber' => '000756890010',
            ),
            'amount' => '19636',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000756890011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701118880',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '890011',
                'ReferenceNumber' => '000756890011',
                'OrderNumber' => '000756890011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c2472d9f',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '890011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9718',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756940010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '940010',
                'ReferenceNumber' => '000756940010',
                'OrderNumber' => '000756940010',
            ),
            'amount' => '19632',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000756940011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '4005578003333335',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'visa',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '940011',
                'ReferenceNumber' => '000756940011',
                'OrderNumber' => '000756940011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ee94f9b1',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '940011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9716',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756950010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '950010',
                'ReferenceNumber' => '000756950010',
                'OrderNumber' => '000756950010',
            ),
            'amount' => '9437',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756950011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '950011',
                'ReferenceNumber' => '000756950011',
                'OrderNumber' => '000756950011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'c6e5aedc',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '950011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9337',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756970010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '970010',
                'ReferenceNumber' => '000756970010',
                'OrderNumber' => '000756970010',
            ),
            'amount' => '9439',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756970011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011361000006668',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '970011',
                'ReferenceNumber' => '000756970011',
                'OrderNumber' => '000756970011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '0bc524e9',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '970011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9339',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000756980010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701118880',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '980010',
                'ReferenceNumber' => '000756980010',
                'OrderNumber' => '000756980010',
            ),
            'amount' => '19636',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000756980011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '6011208701118880',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'discover',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '980011',
                'ReferenceNumber' => '000756980011',
                'OrderNumber' => '000756980011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '69030079',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '980011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9718',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000757050010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '050010',
                'ReferenceNumber' => '000757050010',
                'OrderNumber' => '000757050010',
            ),
            'amount' => '9447',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000757050011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '050011',
                'ReferenceNumber' => '000757050011',
                'OrderNumber' => '000757050011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '1e7c2aef',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '050011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9347',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000757060010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'billingPostcode' => '11747',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '060010',
                'ReferenceNumber' => '000757060010',
                'OrderNumber' => '000757060010',
            ),
            'amount' => '19644',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Z', $response->getAVSResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000757060011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '01',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '060011',
                'ReferenceNumber' => '000757060011',
                'OrderNumber' => '000757060011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '50c53764',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '060011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9722',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000757350010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '350010',
                'ReferenceNumber' => '000757350010',
                'OrderNumber' => '000757350010',
            ),
            'amount' => '9493',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000757350011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5424180011113336',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '350011',
                'ReferenceNumber' => '000757350011',
                'OrderNumber' => '000757350011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => '303e6224',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '350011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9393',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }


    public function testCaseNumber000757360010()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'cvv' => '123',
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '360010',
                'ReferenceNumber' => '000757360010',
                'OrderNumber' => '000757360010',
            ),
            'amount' => '19654',
            'currency' => '840',
        );

        // Act
        $request = $gateway->authorize($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('Match', $response->getCCVResultCode());
        $this->assertEquals('002', $response->getResponseCode());
    }


    public function testCaseNumber000757360011()
    {
        // Arrange
        $expirationDate = new \DateTime();
        $expirationDate->add(new \DateInterval('P1Y'));
        $expiryMonth = $expirationDate->format('m');
        $expiryYear = $expirationDate->format('Y');

        $now = new \DateTime();

        $gateway = new RapidConnectGateway($this->getHttpClient(), $this->getHttpRequest());
        $gateway->setApp(getenv('RAPIDCONNECT_APP'));
        $gateway->setDID(getenv('RAPIDCONNECT_DID'));
        $gateway->setGroupID(getenv('RAPIDCONNECT_GROUPID'));
        $gateway->setServiceID(getenv('RAPIDCONNECT_SERVICEID'));
        $gateway->setTerminalID(getenv('RAPIDCONNECT_TERMINALID'));
        $gateway->setMerchantID(getenv('RAPIDCONNECT_MERCHANTID_RETAIL'));

        $requestData = array(
            'card' => array(
                'number' => '5256977001111110',
                'expiryMonth' => $expiryMonth,
                'expiryYear' => $expiryYear,
                'type' => 'mastercard',
            ),
            'CommonGroup' => array(
                'TPPID' => str_pad(getenv('RAPIDCONNECT_TPPID'), 6, '0'),
                'LocalDateandTime' => $now->format('Ymdhis'),
                'TransmissionDateandTime' => $now->format('Ymdhis'),
                'POSEntryMode' => array(
                    'entryMode' => '90',
                    'pinCapability' => '2',
                ),

                'POSConditionCode' => '00',
                'TerminalCategoryCode' => '00',
                'TerminalEntryCapability' => '03',
                'TerminalLocationIndicator' => '0',
                'CardCaptureCapability' => '1',
                'STAN' => '360011',
                'ReferenceNumber' => '000757360011',
                'OrderNumber' => '000757360011',
            ),
            'OriginalAuthorizationGroup' => array(
                'OriginalAuthorizationID' => 'ceb79375',
                'OriginalLocalDateandTime' => $now->format('Ymdhis'),
                'OriginalTransmissionDateandTime' => $now->format('Ymdhis'),
                'OriginalSTAN' => '360011',
                'OriginalResponseCode' => '000',
            ),
            'amount' => '9727',
            'currency' => '840',
        );

        // Act
        $request = $gateway->partialReversal($requestData);
        $response = $request->send();

        // Assert
        $this->assertEquals('000', $response->getResponseCode());
    }

}
